# ifndef _MSTDIO_H_# define _MSTDIO_H_#include <types.h>/*#include <stdarg.h>*/#include "VarArgs.h"#define	MBUFSIZ	1024struct	_miobuf {	int		_cnt;	char	*_ptr;	char	*_base;	int		_bufsiz;	short	_flag;	short	_file;	short 	vrefnum; 	/*mac directory file is in*/	char  	name[64]; 	/*Name of file*/};typedef struct _miobuf M_FILE;#define _MIOFBF		00000#define	_MIOREAD	00001#define	_MIOWRT		00002#define	_MIONBF		00004#define	_MIOMYBUF	00010#define	_MIOEOF		00020#define	_MIOERR		00040#define	_MIOSTRG	00100#define	_MIOLBF		00200#define	_MIORW		00400#define _MIOAPPEND	01000#ifndef NULL#define	NULL	0#endif#ifndef EOF#define	EOF	(-1)#endif#define	mgetc(p)	(--(p)->_cnt>=0? *(p)->_ptr++&0377:_mfilbuf(p))#define mputc(x,p) (--(p)->_cnt>=0? ((int)(*(p)->_ptr++=(unsigned)(x)))&0xff:_mflsbuf((unsigned)(x),p))#define	mfeof(p)	(((p)->_flag&_MIOEOF)!=0)#define	mferror(p)	(((p)->_flag&_MIOERR)!=0)#define	mfileno(p)	((p)->_file)#define getdtablesize() 20short _mopen(	char *name,		short vrefnum,	long mode);long_mclose(	short fd);void mclearerr(	register struct _miobuf *iop);void_mcleanup(void);void_mfwalk(	register long (*function)());M_FILE *_mdoopen(	char *file,	short vrefnum,	register char *mode,	register M_FILE *iop);int_mdoscan(	register M_FILE *iop,	register unsigned char *fmt,	va_list va_alist);void mexit(	long code);longmfflush(	register M_FILE *iop);longmfclose(	register M_FILE *iop);M_FILE *mfdopen(	long fd,	register char *mode);longmfgetc(	M_FILE *fp);char *mfgets(	char *s,	long n,	register M_FILE *iop);long_mfilbuf(	register M_FILE	*iop);M_FILE *_mfindiop(void);long_mflsbuf(	unsigned long c,	register M_FILE	*iop);M_FILE *mfopen(	char 	*file,	short   vrefnum,	char	*mode);longmfputc(	long c,	M_FILE *fp);longmfputs(	register char *s,	register M_FILE *iop);longmfread(	register 	char *ptr,	unsigned long	size,	unsigned long	count,	register M_FILE 	*iop);M_FILE *mfreopen(	char *file,	short vrefnum,	char *mode,	M_FILE *iop);longmfseek(	M_FILE *iop,	long offset,	long ptrname);long mftell(	register M_FILE *iop);longmfwrite(	register char	*ptr,	unsigned long	size,	unsigned long	count,	register M_FILE	*iop);void_mgetstdiobuf(	register M_FILE	*iop);longmgetw(	register M_FILE *iop);longmputw(	long w,	register M_FILE *iop);void mrewind(	/*0001*/	register struct _miobuf *iop);longmfscanf(	M_FILE *iop,	char *fmt,	void *args,	...);longmsscanf(	register char *str,	char *fmt,	void *args,	...);voidmsetbuf(	/*0001*/	M_FILE *iop,	char *buf);void msetbuffer(	M_FILE *iop,	char *buf,	long size);longmsetvbuf(	register M_FILE	*iop,	char	*buf,	long	type,	long	size);longmungetc(	long c,	register M_FILE *iop);void ap_error(	char *s,	OSErr error);# endif